
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL CHAR CHAR_TYPE COMMA DIVIDE ELSE EQ FOR GEQ GT ID IF INT LBRACE LEQ LPAREN LT MINUS NEQ NUMBER PLUS PRINTF RBRACE RETURN RPAREN SCANF SEMI TIMES WHILEprogram : function_listfunction_list : function_list function\n                     | functionfunction : INT ID LPAREN param_list RPAREN LBRACE stmt_list RBRACEparam_list : param_list COMMA param\n                  | param\n                  | emptyparam : INT IDstmt_list : stmt_list statement\n                 | statementstatement : var_decl SEMI\n                 | assignment SEMI\n                 | if_stmt\n                 | while_stmt\n                 | return_stmt SEMIvar_decl : INT IDassignment : ID ASSIGN exprif_stmt : IF LPAREN expr RPAREN LBRACE stmt_list RBRACE\n               | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACEwhile_stmt : WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACEreturn_stmt : RETURN exprexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE exprexpr : LPAREN expr RPARENexpr : NUMBERexpr : IDexpr : ID LPAREN arg_list RPARENarg_list : arg_list COMMA expr\n                | expr\n                | emptyempty :'
    
_lr_action_items = {'INT':([0,2,3,5,7,14,15,19,20,23,24,31,32,33,34,35,61,62,65,66,68,69,71,72,73,],[4,4,-3,-2,8,8,17,17,-10,-13,-14,-4,-9,-11,-12,-15,17,17,17,17,-18,-20,17,17,-19,]),'$end':([1,2,3,5,31,],[0,-1,-3,-2,-4,]),'ID':([4,8,15,17,19,20,23,24,28,30,32,33,34,35,36,37,39,45,46,47,48,50,61,62,64,65,66,68,69,71,72,73,],[6,12,18,29,18,-10,-13,-14,41,41,-9,-11,-12,-15,41,41,41,41,41,41,41,41,18,18,41,18,18,-18,-20,18,18,-19,]),'LPAREN':([6,26,27,28,30,36,37,39,41,45,46,47,48,50,64,],[7,36,37,39,39,39,39,39,50,39,39,39,39,39,39,]),'RPAREN':([7,9,10,11,12,16,40,41,43,44,49,50,53,54,55,56,57,58,59,60,63,67,],[-33,13,-6,-7,-8,-5,-27,-28,51,52,57,-33,-22,-23,-24,-25,-26,63,-31,-32,-29,-30,]),'COMMA':([7,9,10,11,12,16,40,41,50,53,54,55,56,57,58,59,60,63,67,],[-33,14,-6,-7,-8,-5,-27,-28,-33,-22,-23,-24,-25,-26,64,-31,-32,-29,-30,]),'LBRACE':([13,51,52,70,],[15,61,62,71,]),'IF':([15,19,20,23,24,32,33,34,35,61,62,65,66,68,69,71,72,73,],[26,26,-10,-13,-14,-9,-11,-12,-15,26,26,26,26,-18,-20,26,26,-19,]),'WHILE':([15,19,20,23,24,32,33,34,35,61,62,65,66,68,69,71,72,73,],[27,27,-10,-13,-14,-9,-11,-12,-15,27,27,27,27,-18,-20,27,27,-19,]),'RETURN':([15,19,20,23,24,32,33,34,35,61,62,65,66,68,69,71,72,73,],[28,28,-10,-13,-14,-9,-11,-12,-15,28,28,28,28,-18,-20,28,28,-19,]),'ASSIGN':([18,],[30,]),'RBRACE':([19,20,23,24,32,33,34,35,65,66,68,69,72,73,],[31,-10,-13,-14,-9,-11,-12,-15,68,69,-18,-20,73,-19,]),'SEMI':([21,22,25,29,38,40,41,42,53,54,55,56,57,63,],[33,34,35,-16,-21,-27,-28,-17,-22,-23,-24,-25,-26,-29,]),'NUMBER':([28,30,36,37,39,45,46,47,48,50,64,],[40,40,40,40,40,40,40,40,40,40,40,]),'PLUS':([38,40,41,42,43,44,49,53,54,55,56,57,59,63,67,],[45,-27,-28,45,45,45,45,45,45,45,45,-26,45,-29,45,]),'MINUS':([38,40,41,42,43,44,49,53,54,55,56,57,59,63,67,],[46,-27,-28,46,46,46,46,46,46,46,46,-26,46,-29,46,]),'TIMES':([38,40,41,42,43,44,49,53,54,55,56,57,59,63,67,],[47,-27,-28,47,47,47,47,47,47,47,47,-26,47,-29,47,]),'DIVIDE':([38,40,41,42,43,44,49,53,54,55,56,57,59,63,67,],[48,-27,-28,48,48,48,48,48,48,48,48,-26,48,-29,48,]),'ELSE':([68,],[70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_list':([0,],[2,]),'function':([0,2,],[3,5,]),'param_list':([7,],[9,]),'param':([7,14,],[10,16,]),'empty':([7,50,],[11,60,]),'stmt_list':([15,61,62,71,],[19,65,66,72,]),'statement':([15,19,61,62,65,66,71,72,],[20,32,20,20,32,32,20,32,]),'var_decl':([15,19,61,62,65,66,71,72,],[21,21,21,21,21,21,21,21,]),'assignment':([15,19,61,62,65,66,71,72,],[22,22,22,22,22,22,22,22,]),'if_stmt':([15,19,61,62,65,66,71,72,],[23,23,23,23,23,23,23,23,]),'while_stmt':([15,19,61,62,65,66,71,72,],[24,24,24,24,24,24,24,24,]),'return_stmt':([15,19,61,62,65,66,71,72,],[25,25,25,25,25,25,25,25,]),'expr':([28,30,36,37,39,45,46,47,48,50,64,],[38,42,43,44,49,53,54,55,56,59,67,]),'arg_list':([50,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',8),
  ('function_list -> function_list function','function_list',2,'p_function_list','parser.py',12),
  ('function_list -> function','function_list',1,'p_function_list','parser.py',13),
  ('function -> INT ID LPAREN param_list RPAREN LBRACE stmt_list RBRACE','function',8,'p_function','parser.py',20),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',24),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',25),
  ('param_list -> empty','param_list',1,'p_param_list','parser.py',26),
  ('param -> INT ID','param',2,'p_param','parser.py',35),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','parser.py',39),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list','parser.py',40),
  ('statement -> var_decl SEMI','statement',2,'p_statement','parser.py',47),
  ('statement -> assignment SEMI','statement',2,'p_statement','parser.py',48),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',49),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',50),
  ('statement -> return_stmt SEMI','statement',2,'p_statement','parser.py',51),
  ('var_decl -> INT ID','var_decl',2,'p_var_decl','parser.py',55),
  ('assignment -> ID ASSIGN expr','assignment',3,'p_assignment','parser.py',59),
  ('if_stmt -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE','if_stmt',7,'p_if_stmt','parser.py',63),
  ('if_stmt -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE','if_stmt',11,'p_if_stmt','parser.py',64),
  ('while_stmt -> WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE','while_stmt',7,'p_while_stmt','parser.py',71),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','parser.py',75),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','parser.py',79),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','parser.py',80),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','parser.py',81),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','parser.py',82),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser.py',86),
  ('expr -> NUMBER','expr',1,'p_expr_number','parser.py',90),
  ('expr -> ID','expr',1,'p_expr_var','parser.py',94),
  ('expr -> ID LPAREN arg_list RPAREN','expr',4,'p_expr_call','parser.py',98),
  ('arg_list -> arg_list COMMA expr','arg_list',3,'p_arg_list','parser.py',102),
  ('arg_list -> expr','arg_list',1,'p_arg_list','parser.py',103),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',104),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',113),
]
